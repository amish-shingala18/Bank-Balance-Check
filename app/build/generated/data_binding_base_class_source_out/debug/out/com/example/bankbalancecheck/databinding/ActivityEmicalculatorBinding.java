// Generated by view binder compiler. Do not edit!
package com.example.bankbalancecheck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bankbalancecheck.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEmicalculatorBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView ansIntAmount;

  @NonNull
  public final TextView ansTotInterest;

  @NonNull
  public final TextView ansTotPayAmount;

  @NonNull
  public final CardView cvEmiCalc;

  @NonNull
  public final TextInputEditText edtIntRate;

  @NonNull
  public final TextInputLayout edtIntRateLayout;

  @NonNull
  public final TextInputEditText edtLoanAmt;

  @NonNull
  public final TextInputLayout edtLoanAmtLayout;

  @NonNull
  public final TextInputEditText edtTime;

  @NonNull
  public final TextInputLayout edtTimeLayout;

  @NonNull
  public final TextView emiClearAll;

  @NonNull
  public final ImageView imgEmiBack;

  @NonNull
  public final LinearLayout lnrResultSec1;

  @NonNull
  public final LinearLayout lnrResultSec2;

  @NonNull
  public final LinearLayout lnrResultSec3;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final RelativeLayout relEmi;

  @NonNull
  public final LinearLayout relIntRate;

  @NonNull
  public final LinearLayout relLoanAmt;

  @NonNull
  public final LinearLayout relTime;

  @NonNull
  public final TextView txtIntRate;

  @NonNull
  public final TextView txtLoanAmt;

  @NonNull
  public final TextView txtTime;

  private ActivityEmicalculatorBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView ansIntAmount, @NonNull TextView ansTotInterest,
      @NonNull TextView ansTotPayAmount, @NonNull CardView cvEmiCalc,
      @NonNull TextInputEditText edtIntRate, @NonNull TextInputLayout edtIntRateLayout,
      @NonNull TextInputEditText edtLoanAmt, @NonNull TextInputLayout edtLoanAmtLayout,
      @NonNull TextInputEditText edtTime, @NonNull TextInputLayout edtTimeLayout,
      @NonNull TextView emiClearAll, @NonNull ImageView imgEmiBack,
      @NonNull LinearLayout lnrResultSec1, @NonNull LinearLayout lnrResultSec2,
      @NonNull LinearLayout lnrResultSec3, @NonNull RelativeLayout main,
      @NonNull RelativeLayout relEmi, @NonNull LinearLayout relIntRate,
      @NonNull LinearLayout relLoanAmt, @NonNull LinearLayout relTime, @NonNull TextView txtIntRate,
      @NonNull TextView txtLoanAmt, @NonNull TextView txtTime) {
    this.rootView = rootView;
    this.ansIntAmount = ansIntAmount;
    this.ansTotInterest = ansTotInterest;
    this.ansTotPayAmount = ansTotPayAmount;
    this.cvEmiCalc = cvEmiCalc;
    this.edtIntRate = edtIntRate;
    this.edtIntRateLayout = edtIntRateLayout;
    this.edtLoanAmt = edtLoanAmt;
    this.edtLoanAmtLayout = edtLoanAmtLayout;
    this.edtTime = edtTime;
    this.edtTimeLayout = edtTimeLayout;
    this.emiClearAll = emiClearAll;
    this.imgEmiBack = imgEmiBack;
    this.lnrResultSec1 = lnrResultSec1;
    this.lnrResultSec2 = lnrResultSec2;
    this.lnrResultSec3 = lnrResultSec3;
    this.main = main;
    this.relEmi = relEmi;
    this.relIntRate = relIntRate;
    this.relLoanAmt = relLoanAmt;
    this.relTime = relTime;
    this.txtIntRate = txtIntRate;
    this.txtLoanAmt = txtLoanAmt;
    this.txtTime = txtTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEmicalculatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEmicalculatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_emicalculator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEmicalculatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ansIntAmount;
      TextView ansIntAmount = ViewBindings.findChildViewById(rootView, id);
      if (ansIntAmount == null) {
        break missingId;
      }

      id = R.id.ansTotInterest;
      TextView ansTotInterest = ViewBindings.findChildViewById(rootView, id);
      if (ansTotInterest == null) {
        break missingId;
      }

      id = R.id.ansTotPayAmount;
      TextView ansTotPayAmount = ViewBindings.findChildViewById(rootView, id);
      if (ansTotPayAmount == null) {
        break missingId;
      }

      id = R.id.cvEmiCalc;
      CardView cvEmiCalc = ViewBindings.findChildViewById(rootView, id);
      if (cvEmiCalc == null) {
        break missingId;
      }

      id = R.id.edtIntRate;
      TextInputEditText edtIntRate = ViewBindings.findChildViewById(rootView, id);
      if (edtIntRate == null) {
        break missingId;
      }

      id = R.id.edtIntRateLayout;
      TextInputLayout edtIntRateLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtIntRateLayout == null) {
        break missingId;
      }

      id = R.id.edtLoanAmt;
      TextInputEditText edtLoanAmt = ViewBindings.findChildViewById(rootView, id);
      if (edtLoanAmt == null) {
        break missingId;
      }

      id = R.id.edtLoanAmtLayout;
      TextInputLayout edtLoanAmtLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtLoanAmtLayout == null) {
        break missingId;
      }

      id = R.id.edtTime;
      TextInputEditText edtTime = ViewBindings.findChildViewById(rootView, id);
      if (edtTime == null) {
        break missingId;
      }

      id = R.id.edtTimeLayout;
      TextInputLayout edtTimeLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtTimeLayout == null) {
        break missingId;
      }

      id = R.id.emiClearAll;
      TextView emiClearAll = ViewBindings.findChildViewById(rootView, id);
      if (emiClearAll == null) {
        break missingId;
      }

      id = R.id.imgEmiBack;
      ImageView imgEmiBack = ViewBindings.findChildViewById(rootView, id);
      if (imgEmiBack == null) {
        break missingId;
      }

      id = R.id.lnrResultSec1;
      LinearLayout lnrResultSec1 = ViewBindings.findChildViewById(rootView, id);
      if (lnrResultSec1 == null) {
        break missingId;
      }

      id = R.id.lnrResultSec2;
      LinearLayout lnrResultSec2 = ViewBindings.findChildViewById(rootView, id);
      if (lnrResultSec2 == null) {
        break missingId;
      }

      id = R.id.lnrResultSec3;
      LinearLayout lnrResultSec3 = ViewBindings.findChildViewById(rootView, id);
      if (lnrResultSec3 == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.relEmi;
      RelativeLayout relEmi = ViewBindings.findChildViewById(rootView, id);
      if (relEmi == null) {
        break missingId;
      }

      id = R.id.relIntRate;
      LinearLayout relIntRate = ViewBindings.findChildViewById(rootView, id);
      if (relIntRate == null) {
        break missingId;
      }

      id = R.id.relLoanAmt;
      LinearLayout relLoanAmt = ViewBindings.findChildViewById(rootView, id);
      if (relLoanAmt == null) {
        break missingId;
      }

      id = R.id.relTime;
      LinearLayout relTime = ViewBindings.findChildViewById(rootView, id);
      if (relTime == null) {
        break missingId;
      }

      id = R.id.txtIntRate;
      TextView txtIntRate = ViewBindings.findChildViewById(rootView, id);
      if (txtIntRate == null) {
        break missingId;
      }

      id = R.id.txtLoanAmt;
      TextView txtLoanAmt = ViewBindings.findChildViewById(rootView, id);
      if (txtLoanAmt == null) {
        break missingId;
      }

      id = R.id.txtTime;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      return new ActivityEmicalculatorBinding((RelativeLayout) rootView, ansIntAmount,
          ansTotInterest, ansTotPayAmount, cvEmiCalc, edtIntRate, edtIntRateLayout, edtLoanAmt,
          edtLoanAmtLayout, edtTime, edtTimeLayout, emiClearAll, imgEmiBack, lnrResultSec1,
          lnrResultSec2, lnrResultSec3, main, relEmi, relIntRate, relLoanAmt, relTime, txtIntRate,
          txtLoanAmt, txtTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
