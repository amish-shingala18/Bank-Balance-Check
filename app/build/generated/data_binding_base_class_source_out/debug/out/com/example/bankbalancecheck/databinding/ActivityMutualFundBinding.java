// Generated by view binder compiler. Do not edit!
package com.example.bankbalancecheck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bankbalancecheck.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMutualFundBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView ansEstRet;

  @NonNull
  public final TextView ansInvested;

  @NonNull
  public final TextView ansMutualTotal;

  @NonNull
  public final CardView cvMutualCalc;

  @NonNull
  public final TextInputEditText edtExpReturn;

  @NonNull
  public final TextInputLayout edtExpReturnLayout;

  @NonNull
  public final TextInputEditText edtMonInv;

  @NonNull
  public final TextInputLayout edtMonInvLayout;

  @NonNull
  public final TextInputEditText edtMutualTime;

  @NonNull
  public final TextInputLayout edtMutualTimeLayout;

  @NonNull
  public final ImageView imgMutualBack;

  @NonNull
  public final LinearLayout lnrResultSec1;

  @NonNull
  public final LinearLayout lnrResultSec2;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView mutualClearAll;

  @NonNull
  public final LinearLayout relExpRet;

  @NonNull
  public final LinearLayout relMonInv;

  @NonNull
  public final RelativeLayout relMutual;

  @NonNull
  public final LinearLayout relMutualTime;

  @NonNull
  public final TextView txtIntRate;

  @NonNull
  public final TextView txtMonInv;

  @NonNull
  public final TextView txtTime;

  private ActivityMutualFundBinding(@NonNull RelativeLayout rootView, @NonNull TextView ansEstRet,
      @NonNull TextView ansInvested, @NonNull TextView ansMutualTotal,
      @NonNull CardView cvMutualCalc, @NonNull TextInputEditText edtExpReturn,
      @NonNull TextInputLayout edtExpReturnLayout, @NonNull TextInputEditText edtMonInv,
      @NonNull TextInputLayout edtMonInvLayout, @NonNull TextInputEditText edtMutualTime,
      @NonNull TextInputLayout edtMutualTimeLayout, @NonNull ImageView imgMutualBack,
      @NonNull LinearLayout lnrResultSec1, @NonNull LinearLayout lnrResultSec2,
      @NonNull RelativeLayout main, @NonNull TextView mutualClearAll,
      @NonNull LinearLayout relExpRet, @NonNull LinearLayout relMonInv,
      @NonNull RelativeLayout relMutual, @NonNull LinearLayout relMutualTime,
      @NonNull TextView txtIntRate, @NonNull TextView txtMonInv, @NonNull TextView txtTime) {
    this.rootView = rootView;
    this.ansEstRet = ansEstRet;
    this.ansInvested = ansInvested;
    this.ansMutualTotal = ansMutualTotal;
    this.cvMutualCalc = cvMutualCalc;
    this.edtExpReturn = edtExpReturn;
    this.edtExpReturnLayout = edtExpReturnLayout;
    this.edtMonInv = edtMonInv;
    this.edtMonInvLayout = edtMonInvLayout;
    this.edtMutualTime = edtMutualTime;
    this.edtMutualTimeLayout = edtMutualTimeLayout;
    this.imgMutualBack = imgMutualBack;
    this.lnrResultSec1 = lnrResultSec1;
    this.lnrResultSec2 = lnrResultSec2;
    this.main = main;
    this.mutualClearAll = mutualClearAll;
    this.relExpRet = relExpRet;
    this.relMonInv = relMonInv;
    this.relMutual = relMutual;
    this.relMutualTime = relMutualTime;
    this.txtIntRate = txtIntRate;
    this.txtMonInv = txtMonInv;
    this.txtTime = txtTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMutualFundBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMutualFundBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mutual_fund, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMutualFundBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ansEstRet;
      TextView ansEstRet = ViewBindings.findChildViewById(rootView, id);
      if (ansEstRet == null) {
        break missingId;
      }

      id = R.id.ansInvested;
      TextView ansInvested = ViewBindings.findChildViewById(rootView, id);
      if (ansInvested == null) {
        break missingId;
      }

      id = R.id.ansMutualTotal;
      TextView ansMutualTotal = ViewBindings.findChildViewById(rootView, id);
      if (ansMutualTotal == null) {
        break missingId;
      }

      id = R.id.cvMutualCalc;
      CardView cvMutualCalc = ViewBindings.findChildViewById(rootView, id);
      if (cvMutualCalc == null) {
        break missingId;
      }

      id = R.id.edtExpReturn;
      TextInputEditText edtExpReturn = ViewBindings.findChildViewById(rootView, id);
      if (edtExpReturn == null) {
        break missingId;
      }

      id = R.id.edtExpReturnLayout;
      TextInputLayout edtExpReturnLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtExpReturnLayout == null) {
        break missingId;
      }

      id = R.id.edtMonInv;
      TextInputEditText edtMonInv = ViewBindings.findChildViewById(rootView, id);
      if (edtMonInv == null) {
        break missingId;
      }

      id = R.id.edtMonInvLayout;
      TextInputLayout edtMonInvLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtMonInvLayout == null) {
        break missingId;
      }

      id = R.id.edtMutualTime;
      TextInputEditText edtMutualTime = ViewBindings.findChildViewById(rootView, id);
      if (edtMutualTime == null) {
        break missingId;
      }

      id = R.id.edtMutualTimeLayout;
      TextInputLayout edtMutualTimeLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtMutualTimeLayout == null) {
        break missingId;
      }

      id = R.id.imgMutualBack;
      ImageView imgMutualBack = ViewBindings.findChildViewById(rootView, id);
      if (imgMutualBack == null) {
        break missingId;
      }

      id = R.id.lnrResultSec1;
      LinearLayout lnrResultSec1 = ViewBindings.findChildViewById(rootView, id);
      if (lnrResultSec1 == null) {
        break missingId;
      }

      id = R.id.lnrResultSec2;
      LinearLayout lnrResultSec2 = ViewBindings.findChildViewById(rootView, id);
      if (lnrResultSec2 == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.mutualClearAll;
      TextView mutualClearAll = ViewBindings.findChildViewById(rootView, id);
      if (mutualClearAll == null) {
        break missingId;
      }

      id = R.id.relExpRet;
      LinearLayout relExpRet = ViewBindings.findChildViewById(rootView, id);
      if (relExpRet == null) {
        break missingId;
      }

      id = R.id.relMonInv;
      LinearLayout relMonInv = ViewBindings.findChildViewById(rootView, id);
      if (relMonInv == null) {
        break missingId;
      }

      id = R.id.relMutual;
      RelativeLayout relMutual = ViewBindings.findChildViewById(rootView, id);
      if (relMutual == null) {
        break missingId;
      }

      id = R.id.relMutualTime;
      LinearLayout relMutualTime = ViewBindings.findChildViewById(rootView, id);
      if (relMutualTime == null) {
        break missingId;
      }

      id = R.id.txtIntRate;
      TextView txtIntRate = ViewBindings.findChildViewById(rootView, id);
      if (txtIntRate == null) {
        break missingId;
      }

      id = R.id.txtMonInv;
      TextView txtMonInv = ViewBindings.findChildViewById(rootView, id);
      if (txtMonInv == null) {
        break missingId;
      }

      id = R.id.txtTime;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      return new ActivityMutualFundBinding((RelativeLayout) rootView, ansEstRet, ansInvested,
          ansMutualTotal, cvMutualCalc, edtExpReturn, edtExpReturnLayout, edtMonInv,
          edtMonInvLayout, edtMutualTime, edtMutualTimeLayout, imgMutualBack, lnrResultSec1,
          lnrResultSec2, main, mutualClearAll, relExpRet, relMonInv, relMutual, relMutualTime,
          txtIntRate, txtMonInv, txtTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
