// Generated by view binder compiler. Do not edit!
package com.example.bankbalancecheck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bankbalancecheck.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGstCalculatorBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView ansTotalGST;

  @NonNull
  public final TextView ansTotalGSTAmount;

  @NonNull
  public final CardView cvGSTCalc;

  @NonNull
  public final TextInputEditText edtGSTAmt;

  @NonNull
  public final TextInputLayout edtGSTAmtLayout;

  @NonNull
  public final TextInputEditText edtGSTRate;

  @NonNull
  public final TextInputLayout edtGSTRateLayout;

  @NonNull
  public final TextView gstClearAll;

  @NonNull
  public final ImageView imgGstBack;

  @NonNull
  public final LinearLayout lnrGSTRate;

  @NonNull
  public final LinearLayout lnrResultSec1;

  @NonNull
  public final LinearLayout lnrResultSec2;

  @NonNull
  public final LinearLayout lnrTotalAmt;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final RadioButton rbGSTExclusive;

  @NonNull
  public final RadioButton rbGSTInclusive;

  @NonNull
  public final RelativeLayout relGst;

  @NonNull
  public final RadioGroup rgGst;

  @NonNull
  public final TextView txtTotalGST;

  @NonNull
  public final TextView txtTotalGSTAmount;

  private ActivityGstCalculatorBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView ansTotalGST, @NonNull TextView ansTotalGSTAmount,
      @NonNull CardView cvGSTCalc, @NonNull TextInputEditText edtGSTAmt,
      @NonNull TextInputLayout edtGSTAmtLayout, @NonNull TextInputEditText edtGSTRate,
      @NonNull TextInputLayout edtGSTRateLayout, @NonNull TextView gstClearAll,
      @NonNull ImageView imgGstBack, @NonNull LinearLayout lnrGSTRate,
      @NonNull LinearLayout lnrResultSec1, @NonNull LinearLayout lnrResultSec2,
      @NonNull LinearLayout lnrTotalAmt, @NonNull RelativeLayout main,
      @NonNull RadioButton rbGSTExclusive, @NonNull RadioButton rbGSTInclusive,
      @NonNull RelativeLayout relGst, @NonNull RadioGroup rgGst, @NonNull TextView txtTotalGST,
      @NonNull TextView txtTotalGSTAmount) {
    this.rootView = rootView;
    this.ansTotalGST = ansTotalGST;
    this.ansTotalGSTAmount = ansTotalGSTAmount;
    this.cvGSTCalc = cvGSTCalc;
    this.edtGSTAmt = edtGSTAmt;
    this.edtGSTAmtLayout = edtGSTAmtLayout;
    this.edtGSTRate = edtGSTRate;
    this.edtGSTRateLayout = edtGSTRateLayout;
    this.gstClearAll = gstClearAll;
    this.imgGstBack = imgGstBack;
    this.lnrGSTRate = lnrGSTRate;
    this.lnrResultSec1 = lnrResultSec1;
    this.lnrResultSec2 = lnrResultSec2;
    this.lnrTotalAmt = lnrTotalAmt;
    this.main = main;
    this.rbGSTExclusive = rbGSTExclusive;
    this.rbGSTInclusive = rbGSTInclusive;
    this.relGst = relGst;
    this.rgGst = rgGst;
    this.txtTotalGST = txtTotalGST;
    this.txtTotalGSTAmount = txtTotalGSTAmount;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGstCalculatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGstCalculatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_gst_calculator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGstCalculatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ansTotalGST;
      TextView ansTotalGST = ViewBindings.findChildViewById(rootView, id);
      if (ansTotalGST == null) {
        break missingId;
      }

      id = R.id.ansTotalGSTAmount;
      TextView ansTotalGSTAmount = ViewBindings.findChildViewById(rootView, id);
      if (ansTotalGSTAmount == null) {
        break missingId;
      }

      id = R.id.cvGSTCalc;
      CardView cvGSTCalc = ViewBindings.findChildViewById(rootView, id);
      if (cvGSTCalc == null) {
        break missingId;
      }

      id = R.id.edtGSTAmt;
      TextInputEditText edtGSTAmt = ViewBindings.findChildViewById(rootView, id);
      if (edtGSTAmt == null) {
        break missingId;
      }

      id = R.id.edtGSTAmtLayout;
      TextInputLayout edtGSTAmtLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtGSTAmtLayout == null) {
        break missingId;
      }

      id = R.id.edtGSTRate;
      TextInputEditText edtGSTRate = ViewBindings.findChildViewById(rootView, id);
      if (edtGSTRate == null) {
        break missingId;
      }

      id = R.id.edtGSTRateLayout;
      TextInputLayout edtGSTRateLayout = ViewBindings.findChildViewById(rootView, id);
      if (edtGSTRateLayout == null) {
        break missingId;
      }

      id = R.id.gstClearAll;
      TextView gstClearAll = ViewBindings.findChildViewById(rootView, id);
      if (gstClearAll == null) {
        break missingId;
      }

      id = R.id.imgGstBack;
      ImageView imgGstBack = ViewBindings.findChildViewById(rootView, id);
      if (imgGstBack == null) {
        break missingId;
      }

      id = R.id.lnrGSTRate;
      LinearLayout lnrGSTRate = ViewBindings.findChildViewById(rootView, id);
      if (lnrGSTRate == null) {
        break missingId;
      }

      id = R.id.lnrResultSec1;
      LinearLayout lnrResultSec1 = ViewBindings.findChildViewById(rootView, id);
      if (lnrResultSec1 == null) {
        break missingId;
      }

      id = R.id.lnrResultSec2;
      LinearLayout lnrResultSec2 = ViewBindings.findChildViewById(rootView, id);
      if (lnrResultSec2 == null) {
        break missingId;
      }

      id = R.id.lnrTotalAmt;
      LinearLayout lnrTotalAmt = ViewBindings.findChildViewById(rootView, id);
      if (lnrTotalAmt == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.rbGSTExclusive;
      RadioButton rbGSTExclusive = ViewBindings.findChildViewById(rootView, id);
      if (rbGSTExclusive == null) {
        break missingId;
      }

      id = R.id.rbGSTInclusive;
      RadioButton rbGSTInclusive = ViewBindings.findChildViewById(rootView, id);
      if (rbGSTInclusive == null) {
        break missingId;
      }

      id = R.id.relGst;
      RelativeLayout relGst = ViewBindings.findChildViewById(rootView, id);
      if (relGst == null) {
        break missingId;
      }

      id = R.id.rgGst;
      RadioGroup rgGst = ViewBindings.findChildViewById(rootView, id);
      if (rgGst == null) {
        break missingId;
      }

      id = R.id.txtTotalGST;
      TextView txtTotalGST = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalGST == null) {
        break missingId;
      }

      id = R.id.txtTotalGSTAmount;
      TextView txtTotalGSTAmount = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalGSTAmount == null) {
        break missingId;
      }

      return new ActivityGstCalculatorBinding((RelativeLayout) rootView, ansTotalGST,
          ansTotalGSTAmount, cvGSTCalc, edtGSTAmt, edtGSTAmtLayout, edtGSTRate, edtGSTRateLayout,
          gstClearAll, imgGstBack, lnrGSTRate, lnrResultSec1, lnrResultSec2, lnrTotalAmt, main,
          rbGSTExclusive, rbGSTInclusive, relGst, rgGst, txtTotalGST, txtTotalGSTAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
