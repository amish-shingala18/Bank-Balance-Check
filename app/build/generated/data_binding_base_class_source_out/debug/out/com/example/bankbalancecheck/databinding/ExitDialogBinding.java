// Generated by view binder compiler. Do not edit!
package com.example.bankbalancecheck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bankbalancecheck.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExitDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout dialogAppBar;

  @NonNull
  public final RelativeLayout lnrYesOrNo;

  @NonNull
  public final TextView txtExit;

  @NonNull
  public final TextView txtNo;

  @NonNull
  public final TextView txtYes;

  private ExitDialogBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout dialogAppBar,
      @NonNull RelativeLayout lnrYesOrNo, @NonNull TextView txtExit, @NonNull TextView txtNo,
      @NonNull TextView txtYes) {
    this.rootView = rootView;
    this.dialogAppBar = dialogAppBar;
    this.lnrYesOrNo = lnrYesOrNo;
    this.txtExit = txtExit;
    this.txtNo = txtNo;
    this.txtYes = txtYes;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExitDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExitDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.exit_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExitDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialogAppBar;
      RelativeLayout dialogAppBar = ViewBindings.findChildViewById(rootView, id);
      if (dialogAppBar == null) {
        break missingId;
      }

      id = R.id.lnrYesOrNo;
      RelativeLayout lnrYesOrNo = ViewBindings.findChildViewById(rootView, id);
      if (lnrYesOrNo == null) {
        break missingId;
      }

      id = R.id.txtExit;
      TextView txtExit = ViewBindings.findChildViewById(rootView, id);
      if (txtExit == null) {
        break missingId;
      }

      id = R.id.txtNo;
      TextView txtNo = ViewBindings.findChildViewById(rootView, id);
      if (txtNo == null) {
        break missingId;
      }

      id = R.id.txtYes;
      TextView txtYes = ViewBindings.findChildViewById(rootView, id);
      if (txtYes == null) {
        break missingId;
      }

      return new ExitDialogBinding((RelativeLayout) rootView, dialogAppBar, lnrYesOrNo, txtExit,
          txtNo, txtYes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
